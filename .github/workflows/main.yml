name: HTML to APK Conversion

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 14

      - name: Install Cordova
        run: npm install -g cordova

      - name: Build AAB
        run: |
          cordova create myApp
          cd myApp
          cordova platform add android
          cp ${{ github.workspace }}/index.html www/index.html
          cordova build android --release -- --packageType=bundle

          # Create the 'aab' directory if it doesn't exist
          mkdir -p ${{ github.workspace }}/aab

          # Move the generated AAB file to the 'aab' directory
          mv platforms/android/app/build/outputs/bundle/release/app-release.aab ${{ github.workspace }}/aab/app-release.aab

      - name: Install JDK
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: '14'

      - name: Download Bundletool
        run: |
          wget -O bundletool.jar https://github.com/google/bundletool/releases/latest/download/bundletool-all.jar

      - name: Generate APK
        run: |
          java -jar bundletool.jar build-apks --bundle=${{ github.workspace }}/aab/app-release.aab --output=${{ github.workspace }}/apks/app-release.apks --mode=universal

      - name: Extract APK from APK Set
        run: |
          unzip ${{ github.workspace }}/apks/app-release.apks -d ${{ github.workspace }}/apks

      - name: Move APK to 'apk' directory
        run: |
          mkdir -p ${{ github.workspace }}/apk
          mv ${{ github.workspace }}/apks/base.apk ${{ github.workspace }}/apk/app-release.apk

      - name: Create APK artifact
        uses: actions/upload-artifact@v2
        with:
          name: APK
          path: ${{ github.workspace }}/apk
